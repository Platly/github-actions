name: Terraform Run

on:
  workflow_call:
    inputs:
      AWS_REGION:
        type: string
        required: true
      spec:
        description: "Path to the Digger config file."
        required: false
        type: string
      run_name:
        description: "Optional name for the run."
        required: false
        type: string
    secrets:
      AWS_IAM_ROLE:
        required: true

jobs:
  terraform-run:
    name: ${{ inputs.run_name || 'Digger Run' }}
    runs-on: ubuntu-latest
    # This is ignored when called, but good for clarity
    # add these permissions to your workflow
    permissions:
      contents: write      # required to merge PRs
      actions: write       # required for plan persistence
      id-token: write      # required for workload-identity-federation
      pull-requests: write # required to post PR comments
      issues: read         # required to check if PR number is an issue or not
      statuses: write      # required to validate combined PR status

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Job id
      run: echo "Job id ${{ fromJSON(github.event.inputs.spec).job_id }}"
    
    - uses: diggerhq/digger@v0.6.97
      name: Digger Run
      with:
        setup-aws: true
        setup-terraform: true
        aws-role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
        aws-region: ${{ inputs.AWS_REGION }}
        upload-plan-destination: github
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_EVENT_NAME: "pull_request"  # ðŸ‘ˆ this fakes a valid type so Digger CLI doesn't crash
